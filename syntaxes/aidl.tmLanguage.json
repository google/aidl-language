{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"fileTypes": [
		"aidl"
	],
	"name": "AIDL",
	"patterns": [
		{
			"include": "#main"
		}
	],
	"repository": {
		"main": {
			"patterns": [
				{
					"include": "#multi_line_comment"
				},
				{
					"match": "(\/\/.*)",
					"name": "comment.line.double-slash.aidl"
				},
				{
					"match": "(\\b(parcelable|import|package|cpp_header|const|interface|oneway|enum|union|inout|in|out)\\b)",
					"name": "keyword.aidl"
				},
				{
					"match": "(\\b(void|boolean|byte|char|short|int|long|float|double)\\b)",
					"name": "storage.type.aidl"
				},
				{
					"match": "(\\b(String|CharSequence|List|Map)\\b)",
					"name": "support.class.aidl"
				},
				{
					"include": "#literal"
				},
				{
					"match": "([_a-zA-Z][_a-zA-Z0-9]*)",
					"name": "text.aidl"
				},
				{
					"begin": "(\\{)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.aidl"
						}
					},
					"patterns": [
						{
							"include": "#main__1"
						}
					],
					"end": "(\\})",
					"endCaptures": {
						"1": {
							"name": "punctuation.aidl"
						}
					}
				},
				{
					"begin": "(\\()",
					"beginCaptures": {
						"1": {
							"name": "punctuation.aidl"
						}
					},
					"patterns": [
						{
							"include": "#main__2"
						}
					],
					"end": "(\\))",
					"endCaptures": {
						"1": {
							"name": "punctuation.aidl"
						}
					}
				},
				{
					"begin": "(\\[)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.aidl"
						}
					},
					"patterns": [
						{
							"include": "#main__3"
						}
					],
					"end": "(\\])",
					"endCaptures": {
						"1": {
							"name": "punctuation.aidl"
						}
					}
				},
				{
					"match": "([\\x{003a}\\x{003b}\\x{002c}.\\x{003d}\\x{002b}\\x{002a}\\x{002f}\\x{0025}\\x{0026}\\x{007c}\\x{0021}\\x{007e}\\x{003c}\\x{003e}\\^\\-]|<<|>>|&&|\\|\\||<=|>=|==|!=)",
					"name": "punctuation.aidl"
				},
				{
					"match": "([^\\s])",
					"name": "invalid.illegal.aidl"
				}
			]
		},
		"literal": {
			"patterns": [
				{
					"include": "#numeric"
				},
				{
					"match": "('.')",
					"name": "constant.character.aidl"
				},
				{
					"match": "(\"[^\\\"]*\")",
					"name": "string.quoted.double.aidl"
				},
				{
					"match": "(true|false)",
					"name": "constant.language.aidl"
				}
			]
		},
		"main__1": {
			"patterns": [
				{
					"include": "#main"
				}
			]
		},
		"main__2": {
			"patterns": [
				{
					"include": "#main"
				}
			]
		},
		"main__3": {
			"patterns": [
				{
					"include": "#main"
				}
			]
		},
		"multi_line_comment": {
			"patterns": [
				{
					"begin": "(\/\\*\\*)",
					"beginCaptures": {
						"1": {
							"name": "comment.block.documentation.aidl"
						}
					},
					"contentName": "comment.block.documentation.aidl",
					"end": "(\\*\/)",
					"endCaptures": {
						"1": {
							"name": "comment.block.documentation.aidl"
						}
					}
				},
				{
					"begin": "(\/\\*)",
					"beginCaptures": {
						"1": {
							"name": "comment.block.aidl"
						}
					},
					"contentName": "comment.block.aidl",
					"end": "(\\*\/)",
					"endCaptures": {
						"1": {
							"name": "comment.block.aidl"
						}
					}
				}
			]
		},
		"multi_line_comment__1": {
			"patterns": []
		},
		"multi_line_comment__2": {
			"patterns": []
		},
		"numeric": {
			"patterns": [
				{
					"match": "(0[x\\x{007c}X][0-9a-fA-F]+[lL]?)",
					"name": "constant.numeric.hex.aidl"
				},
				{
					"match": "([0-9]*\\.[0-9]+([eE][-\\x{002b}]?[0-9]+)?f?|[0-9]*\\.?[0-9]+([eE][-\\x{002b}]?[0-9]+)?f)",
					"name": "constant.numeric.float.aidl"
				},
				{
					"match": "([0-9]+[lL]?)",
					"name": "constant.numeric.decimal.aidl"
				}
			]
		}
	},
	"scopeName": "source.aidl"
}